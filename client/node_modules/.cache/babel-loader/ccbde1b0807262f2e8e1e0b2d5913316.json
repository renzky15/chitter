{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetList/TweetList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./TweetList.css\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { tweetActions } from \"../../action/tweet\";\nimport AuthContext from \"../../util/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetList(props) {\n  _s();\n\n  const [tweetList, setTweetList] = useState([]);\n  const [likeCounter, setLikeCounter] = useState();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const onLoadTweetList = () => {\n      setTweetList(props.tweet_payload);\n    };\n\n    onLoadTweetList();\n  }, [props.tweet_payload]);\n\n  const handleLikeCounter = tweet_id => {\n    const data = tweetList.filter(list => list._id === tweet_id);\n    setLikeCounter(data[0].likes + 1);\n    const payload = {\n      likes: likeCounter,\n      _id: tweet_id\n    }; // props.dispatch(tweetActions.likeTweet(payload))\n\n    console.log(payload);\n  };\n\n  const handleRemoveTweet = id => {\n    try {\n      props.dispatch(tweetActions.removeTweet(id));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tweetList.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-list-container\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"li-element\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweet-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet-body-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-username\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: tweet.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-date-created\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: moment(tweet.createdAt).fromNow()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 41\n                }, this), currentUser._id === tweet.user_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"remove-tweet-btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleRemoveTweet(tweet._id),\n                    className: \"remove-btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"remove-btn-text\",\n                      children: \"X\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 45\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet-body-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: tweet.tweet_body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"like-comments-counter\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"number-of-likes\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [tweet.likes, \" like(s)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"number-of-comments\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [tweet.comments.length, \" comments\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet-body-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-like-btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleLikeCounter(tweet._id),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"btn-like\",\n                      children: \"Like\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-comment-btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-retweet-btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Retweet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetList, \"E7V9Wm5TM/h6Fzxqh+4eXqB6xUk=\");\n\n_c = TweetList;\n\nconst mapStateToProps = state => {\n  return {\n    tweet_payload: state.tweets\n  };\n};\n\nexport default connect(mapStateToProps)(TweetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetList/TweetList.js"],"names":["React","useState","useEffect","useContext","connect","moment","tweetActions","AuthContext","TweetList","props","tweetList","setTweetList","likeCounter","setLikeCounter","currentUser","onLoadTweetList","tweet_payload","handleLikeCounter","tweet_id","data","filter","list","_id","likes","payload","console","log","handleRemoveTweet","id","dispatch","removeTweet","error","message","map","tweet","index","username","createdAt","fromNow","user_id","tweet_body","comments","length","mapStateToProps","state","tweets"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport \"./TweetList.css\"\nimport { connect } from \"react-redux\"\nimport moment from \"moment\"\nimport { tweetActions } from \"../../action/tweet\"\nimport AuthContext from \"../../util/AuthContext\"\n\nfunction TweetList(props) {\n    const [tweetList, setTweetList] = useState([])\n    const [likeCounter, setLikeCounter] = useState()\n    const { currentUser } = useContext(AuthContext)\n    useEffect(() => {\n        const onLoadTweetList = () => {\n            setTweetList(props.tweet_payload)\n        }\n        onLoadTweetList()\n    }, [props.tweet_payload])\n\n    const handleLikeCounter = (tweet_id) => {\n        const data = tweetList.filter((list) => list._id === tweet_id)\n        setLikeCounter(data[0].likes + 1)\n        const payload = {\n            likes: likeCounter,\n            _id: tweet_id,\n        }\n        // props.dispatch(tweetActions.likeTweet(payload))\n        console.log(payload)\n    }\n\n    const handleRemoveTweet = (id) => {\n        try {\n            props.dispatch(tweetActions.removeTweet(id))\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <ul>\n                {tweetList.map((tweet, index) => (\n                    <div className=\"tweet-list-container\">\n                        <li key={index}>\n                            <div className=\"li-element\">\n                                <div className=\"username-icon\">\n                                    <span></span>\n                                </div>\n\n                                <div className=\"tweet-body\">\n                                    <div className=\"tweet-body-header\">\n                                        <div className=\"tweet-username\">\n                                            <span>{tweet.username}</span>\n                                        </div>\n\n                                        <div className=\"tweet-date-created\">\n                                            <span>\n                                                {moment(\n                                                    tweet.createdAt\n                                                ).fromNow()}\n                                            </span>\n                                        </div>\n\n                                        {currentUser._id === tweet.user_id ? (\n                                            <div className=\"remove-tweet-btn\">\n                                                <button\n                                                    onClick={() =>\n                                                        handleRemoveTweet(\n                                                            tweet._id\n                                                        )\n                                                    }\n                                                    className=\"remove-btn\"\n                                                >\n                                                    <span className=\"remove-btn-text\">\n                                                        X\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </div>\n                                    <div className=\"tweet-body-text\">\n                                        <p>{tweet.tweet_body}</p>\n                                    </div>\n                                    <div className=\"like-comments-counter\">\n                                        <div className=\"number-of-likes\">\n                                            <span>{tweet.likes} like(s)</span>\n                                        </div>\n                                        <div className=\"number-of-comments\">\n                                            <span>\n                                                {tweet.comments.length} comments\n                                            </span>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"tweet-body-footer\">\n                                        <div className=\"tweet-like-btn\">\n                                            <button\n                                                onClick={() =>\n                                                    handleLikeCounter(tweet._id)\n                                                }\n                                            >\n                                                <span id=\"btn-like\">Like</span>\n                                            </button>\n                                        </div>\n                                        <div className=\"tweet-comment-btn\">\n                                            <span>Comment</span>\n                                        </div>\n                                        <div className=\"tweet-retweet-btn\">\n                                            <span>Retweet</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                    </div>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tweet_payload: state.tweets,\n    }\n}\nexport default connect(mapStateToProps)(TweetList)\n"]},"metadata":{},"sourceType":"module"}