{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetList/TweetList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./TweetList.css\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { tweetActions } from \"../../action/tweet\";\nimport AuthContext from \"../../util/AuthContext\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetList(props) {\n  _s();\n\n  const [tweetList, setTweetList] = useState([]);\n  const [likeCounter, setLikeCounter] = useState();\n  const [page, setPage] = useState(1);\n  const {\n    currentUser\n  } = useContext(AuthContext); // useEffect(() => {\n  //     const onLoadTweetList = () => {\n  //         setTweetList(props.tweet_payload)\n  //     }\n  //     onLoadTweetList()\n  // }, [props.tweet_payload])\n\n  const handleLikeCounter = tweet_id => {\n    const data = tweetList.filter(list => list._id === tweet_id);\n    setLikeCounter(data[0].likes + 1);\n    const payload = {\n      likes: likeCounter,\n      _id: tweet_id\n    };\n    props.dispatch(tweetActions.likeTweet(payload));\n  };\n\n  const handleRemoveTweet = id => {\n    try {\n      props.dispatch(tweetActions.removeTweet(id));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const fetchMoreData = () => {\n    console.log(props.dispatch(tweetActions.getAllTweet(page)));\n  };\n\n  useEffect(() => {\n    fetchMoreData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scrollable\",\n      style: {\n        height: \"100%\",\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: tweetList.length,\n        next: fetchMoreData,\n        hasMore: tweetList.length < 200,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this),\n        scrollableTarget: \"scrollable\",\n        children: tweetList.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-list-container\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"li-element\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"username-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-body-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tweet-username\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: tweet.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"date-actions-wrapper\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tweet-date-created\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: moment(tweet.createdAt).startOf(\"days\").fromNow()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 49\n                    }, this), currentUser._id === tweet.user_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"remove-tweet-btn\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleRemoveTweet(tweet._id),\n                        className: \"remove-btn\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"remove-btn-text\",\n                          children: \"x\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 91,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 53\n                    }, this) : \"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-body-text\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: tweet.tweet_body\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"like-comments-counter\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"number-of-likes\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [tweet.likes, \" like(s)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"number-of-comments\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [tweet.comments.length, \" \", \"comments\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  id: \"line-separator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-body-footer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tweet-like-btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleLikeCounter(tweet._id),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"btn-like\",\n                        children: \"Like\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tweet-comment-btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tweet-retweet-btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Retweet\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetList, \"5u50hhBEcrtibmWQYvbO3UzuTKE=\");\n\n_c = TweetList;\n\nconst mapStateToProps = state => {\n  return {\n    tweet_payload: state.tweets\n  };\n};\n\nexport default connect(mapStateToProps)(TweetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetList/TweetList.js"],"names":["React","useState","useEffect","useContext","connect","moment","tweetActions","AuthContext","InfiniteScroll","TweetList","props","tweetList","setTweetList","likeCounter","setLikeCounter","page","setPage","currentUser","handleLikeCounter","tweet_id","data","filter","list","_id","likes","payload","dispatch","likeTweet","handleRemoveTweet","id","removeTweet","error","console","log","message","fetchMoreData","getAllTweet","height","overflowY","length","map","tweet","index","username","createdAt","startOf","fromNow","user_id","tweet_body","comments","mapStateToProps","state","tweet_payload","tweets"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport \"./TweetList.css\"\nimport { connect } from \"react-redux\"\nimport moment from \"moment\"\nimport { tweetActions } from \"../../action/tweet\"\nimport AuthContext from \"../../util/AuthContext\"\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\nfunction TweetList(props) {\n    const [tweetList, setTweetList] = useState([])\n    const [likeCounter, setLikeCounter] = useState()\n    const [page, setPage] = useState(1)\n    const { currentUser } = useContext(AuthContext)\n\n    // useEffect(() => {\n    //     const onLoadTweetList = () => {\n    //         setTweetList(props.tweet_payload)\n    //     }\n    //     onLoadTweetList()\n    // }, [props.tweet_payload])\n\n    const handleLikeCounter = (tweet_id) => {\n        const data = tweetList.filter((list) => list._id === tweet_id)\n        setLikeCounter(data[0].likes + 1)\n        const payload = {\n            likes: likeCounter,\n            _id: tweet_id,\n        }\n        props.dispatch(tweetActions.likeTweet(payload))\n    }\n\n    const handleRemoveTweet = (id) => {\n        try {\n            props.dispatch(tweetActions.removeTweet(id))\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const fetchMoreData = () => {\n        console.log(props.dispatch(tweetActions.getAllTweet(page)))\n    }\n    useEffect(() => {\n        fetchMoreData()\n    }, [])\n    return (\n        <div className=\"container\">\n            <div\n                id=\"scrollable\"\n                style={{ height: \"100%\", overflowY: \"scroll\" }}\n            >\n                <InfiniteScroll\n                    dataLength={tweetList.length}\n                    next={fetchMoreData}\n                    hasMore={tweetList.length < 200}\n                    loader={<h4>Loading...</h4>}\n                    scrollableTarget=\"scrollable\"\n                >\n                    {tweetList.map((tweet, index) => (\n                        <div className=\"tweet-list-container\">\n                            <li key={index}>\n                                <div className=\"li-element\">\n                                    <div className=\"username-icon\">\n                                        <span></span>\n                                    </div>\n\n                                    <div className=\"tweet-body\">\n                                        <div className=\"tweet-body-header\">\n                                            <div className=\"tweet-username\">\n                                                <span>{tweet.username}</span>\n                                            </div>\n                                            <div className=\"date-actions-wrapper\">\n                                                <div className=\"tweet-date-created\">\n                                                    <span>\n                                                        {moment(tweet.createdAt)\n                                                            .startOf(\"days\")\n                                                            .fromNow()}\n                                                    </span>\n                                                </div>\n                                                {currentUser._id ===\n                                                tweet.user_id ? (\n                                                    <div className=\"remove-tweet-btn\">\n                                                        <button\n                                                            onClick={() =>\n                                                                handleRemoveTweet(\n                                                                    tweet._id\n                                                                )\n                                                            }\n                                                            className=\"remove-btn\"\n                                                        >\n                                                            <span className=\"remove-btn-text\">\n                                                                x\n                                                            </span>\n                                                        </button>\n                                                    </div>\n                                                ) : (\n                                                    \"\"\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"tweet-body-text\">\n                                            <p>{tweet.tweet_body}</p>\n                                        </div>\n                                        <div className=\"like-comments-counter\">\n                                            <div className=\"number-of-likes\">\n                                                <span>\n                                                    {tweet.likes} like(s)\n                                                </span>\n                                            </div>\n                                            <div className=\"number-of-comments\">\n                                                <span>\n                                                    {tweet.comments.length}{\" \"}\n                                                    comments\n                                                </span>\n                                            </div>\n                                        </div>\n\n                                        <hr id=\"line-separator\" />\n                                        <div className=\"tweet-body-footer\">\n                                            <div className=\"tweet-like-btn\">\n                                                <button\n                                                    onClick={() =>\n                                                        handleLikeCounter(\n                                                            tweet._id\n                                                        )\n                                                    }\n                                                >\n                                                    <span id=\"btn-like\">\n                                                        Like\n                                                    </span>\n                                                </button>\n                                            </div>\n                                            <div className=\"tweet-comment-btn\">\n                                                <span>Comment</span>\n                                            </div>\n                                            <div className=\"tweet-retweet-btn\">\n                                                <span>Retweet</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </li>\n                        </div>\n                    ))}\n                </InfiniteScroll>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tweet_payload: state.tweets,\n    }\n}\nexport default connect(mapStateToProps)(TweetList)\n"]},"metadata":{},"sourceType":"module"}