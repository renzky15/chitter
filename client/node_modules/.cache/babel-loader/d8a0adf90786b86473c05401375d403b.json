{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetForm/TweetForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport \"./TweetForm.css\";\nimport AuthContext from \"../../util/AuthContext\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TweetForm(props) {\n  _s();\n\n  const [tweetText, setTweetText] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const onTweet = e => {\n    e.preventDefault();\n\n    if (!tweetText) {\n      window.alert(\"Empty tweet cannot be published.\");\n    } else {\n      props.onTweetPost({\n        username: currentUser.username,\n        user_id: currentUser._id,\n        tweet_body: tweetText,\n        date_tweeted: moment()\n      });\n      setTweetText(\"\");\n    }\n  };\n\n  const onTextChange = e => {\n    const tweet = e.target.value;\n    setTweetText(tweet);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onTweet,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: currentUser.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-area\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"tweet-text\",\n              placeholder: \"What's happening\",\n              autoFocus: true,\n              onChange: onTextChange,\n              value: tweetText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tweet-btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tweet-btn\",\n            children: \"Cheep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetForm, \"um7VQwtwYid6/NNX4xT+W5rVM9k=\");\n\n_c = TweetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetForm\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetForm/TweetForm.js"],"names":["React","useState","useContext","AuthContext","moment","TweetForm","props","tweetText","setTweetText","currentUser","onTweet","e","preventDefault","window","alert","onTweetPost","username","user_id","_id","tweet_body","date_tweeted","onTextChange","tweet","target","value","firstName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAkBP,UAAU,CAACC,WAAD,CAAlC;;AAEA,QAAMO,OAAO,GAAIC,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACL,SAAL,EAAgB;AACZM,MAAAA,MAAM,CAACC,KAAP,CAAa,kCAAb;AACH,KAFD,MAEO;AACHR,MAAAA,KAAK,CAACS,WAAN,CAAkB;AACdC,QAAAA,QAAQ,EAAEP,WAAW,CAACO,QADR;AAEdC,QAAAA,OAAO,EAAER,WAAW,CAACS,GAFP;AAGdC,QAAAA,UAAU,EAAEZ,SAHE;AAIda,QAAAA,YAAY,EAAEhB,MAAM;AAJN,OAAlB;AAOAI,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ,GAfD;;AAgBA,QAAMa,YAAY,GAAIV,CAAD,IAAO;AACxB,UAAMW,KAAK,GAAGX,CAAC,CAACY,MAAF,CAASC,KAAvB;AACAhB,IAAAA,YAAY,CAACc,KAAD,CAAZ;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEZ,OAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACI;AAAA,wBAAOD,WAAW,CAACgB;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AACI,cAAA,IAAI,EAAC,YADT;AAEI,cAAA,WAAW,EAAC,kBAFhB;AAGI,cAAA,SAAS,MAHb;AAII,cAAA,QAAQ,EAAEJ,YAJd;AAKI,cAAA,KAAK,EAAEd;AALX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI;AAAK,UAAA,EAAE,EAAC,qBAAR;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAlDuBF,S;;KAAAA,S","sourcesContent":["import React, { useState, useContext } from \"react\"\nimport \"./TweetForm.css\"\nimport AuthContext from \"../../util/AuthContext\"\nimport moment from \"moment\"\n\nexport default function TweetForm(props) {\n    const [tweetText, setTweetText] = useState(\"\")\n    const { currentUser } = useContext(AuthContext)\n\n    const onTweet = (e) => {\n        e.preventDefault()\n\n        if (!tweetText) {\n            window.alert(\"Empty tweet cannot be published.\")\n        } else {\n            props.onTweetPost({\n                username: currentUser.username,\n                user_id: currentUser._id,\n                tweet_body: tweetText,\n                date_tweeted: moment(),\n            })\n\n            setTweetText(\"\")\n        }\n    }\n    const onTextChange = (e) => {\n        const tweet = e.target.value\n        setTweetText(tweet)\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"form-container\">\n                <form onSubmit={onTweet}>\n                    <div className=\"row-element\">\n                        <div className=\"username-icon\">\n                            <span>{currentUser.firstName}</span>\n                        </div>\n\n                        <div className=\"text-area\">\n                            <textarea\n                                name=\"tweet-text\"\n                                placeholder=\"What's happening\"\n                                autoFocus\n                                onChange={onTextChange}\n                                value={tweetText}\n                            />\n                        </div>\n                    </div>\n                    <div id=\"tweet-btn-container\">\n                        <button className=\"tweet-btn\">Cheep</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}