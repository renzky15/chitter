{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport configStore from \"./store/store\";\nimport Tweet from \"./components/Tweet\";\nimport Login from \"./components/Login/Login\";\nimport axios from \"axios\";\nimport Register from \"./components/Register/Register\";\nimport AuthContext, { AuthContextProvider } from \"./util/AuthContext\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst store = configStore();\n\nfunction App() {\n  _s();\n\n  const {\n    loggedIn\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [!loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/login\",\n                component: Login\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/register\",\n                component: Register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true), loggedIn === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/\",\n                component: Tweet\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"BqpBbvcR7D05G3CArRyJxrdORYE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Provider","configStore","Tweet","Login","axios","Register","AuthContext","AuthContextProvider","useContext","defaults","withCredentials","store","App","loggedIn"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,oBAAjD;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEAJ,KAAK,CAACK,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,MAAMC,KAAK,GAAGV,WAAW,EAAzB;;AAEA,SAASW,GAAT,GAAe;AAAA;;AACX,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACF,WAAD,CAA/B;AACA,sBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEK,KAAjB;AAAA,2BACI,QAAC,mBAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI,QAAC,MAAD;AAAA,uBACK,CAACE,QAAD,iBACG;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,SAAS,EAAEV;AAAhC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AACI,gBAAA,IAAI,EAAC,WADT;AAEI,gBAAA,SAAS,EAAEE;AAFf;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,4BAFR,EAWKQ,QAAQ,KAAK,IAAb,iBACG;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,KAAK,MAAZ;AAAa,gBAAA,IAAI,EAAC,GAAlB;AAAsB,gBAAA,SAAS,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ,6BAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA7BQU,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport configStore from \"./store/store\"\nimport Tweet from \"./components/Tweet\"\nimport Login from \"./components/Login/Login\"\nimport axios from \"axios\"\nimport Register from \"./components/Register/Register\"\nimport AuthContext, { AuthContextProvider } from \"./util/AuthContext\"\nimport { useContext } from \"react\"\n\naxios.defaults.withCredentials = true\n\nconst store = configStore()\n\nfunction App() {\n    const { loggedIn } = useContext(AuthContext)\n    return (\n        <Provider store={store}>\n            <AuthContextProvider>\n                <Router>\n                    <div className=\"App\">\n                        <Switch>\n                            {!loggedIn && (\n                                <>\n                                    <Route path=\"/login\" component={Login} />\n                                    <Route\n                                        path=\"/register\"\n                                        component={Register}\n                                    />\n                                </>\n                            )}\n\n                            {loggedIn === true && (\n                                <>\n                                    <Route exact path=\"/\" component={Tweet} />\n                                </>\n                            )}\n                        </Switch>\n                    </div>\n                </Router>\n            </AuthContextProvider>\n        </Provider>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}