{"ast":null,"code":"const tweetReducerDefaultState = [];\nexport default ((state = tweetReducerDefaultState, action) => {\n  switch (action.type) {\n    case \"ADD_TWEET\":\n      return [...state, action.tweet_payload];\n\n    case \"ALL_TWEET\":\n      return [...action.tweets_payload];\n\n    case \"REMOVE_TWEET\":\n      return [...action.tweets_payload];\n\n    case \"LIKE_TWEET\":\n      return [...action.tweets_payload];\n    // case \"LIKE_TWEET\":\n    //     return state.map((tweet_payload) => {\n    //         if (task_payload.id === action.id) {\n    //             return {\n    //                 ...task_payload,\n    //                 ...action.updates,\n    //             }\n    //         } else {\n    //             return task_payload\n    //         }\n    //     })\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/reducers/TweetReducer.js"],"names":["tweetReducerDefaultState","state","action","type","tweet_payload","tweets_payload"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG,EAAjC;AAEA,gBAAe,CAACC,KAAK,GAAGD,wBAAT,EAAmCE,MAAnC,KAA8C;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,aAAlB,CAAP;;AACJ,SAAK,WAAL;AACI,aAAO,CAAC,GAAGF,MAAM,CAACG,cAAX,CAAP;;AACJ,SAAK,cAAL;AACI,aAAO,CAAC,GAAGH,MAAM,CAACG,cAAX,CAAP;;AACJ,SAAK,YAAL;AACI,aAAO,CAAC,GAAGH,MAAM,CAACG,cAAX,CAAP;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOJ,KAAP;AAtBR;AAwBH,CAzBD","sourcesContent":["const tweetReducerDefaultState = []\n\nexport default (state = tweetReducerDefaultState, action) => {\n    switch (action.type) {\n        case \"ADD_TWEET\":\n            return [...state, action.tweet_payload]\n        case \"ALL_TWEET\":\n            return [...action.tweets_payload]\n        case \"REMOVE_TWEET\":\n            return [...action.tweets_payload]\n        case \"LIKE_TWEET\":\n            return [...action.tweets_payload]\n\n        // case \"LIKE_TWEET\":\n        //     return state.map((tweet_payload) => {\n        //         if (task_payload.id === action.id) {\n        //             return {\n        //                 ...task_payload,\n        //                 ...action.updates,\n        //             }\n        //         } else {\n        //             return task_payload\n        //         }\n        //     })\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}