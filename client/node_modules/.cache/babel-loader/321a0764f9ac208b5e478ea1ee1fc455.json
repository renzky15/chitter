{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/util/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { getLoggedIn } from \"../api/auth\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(undefined);\n\n  const isLoggedIn = async () => {\n    getLoggedIn().then(res => setLoggedIn(res));\n  };\n\n  const getCurrentUser = async () => {// getCurrentUser(Cookies.get(\"token\")).then((res) =>\n    //     setUserData(res.user_data)\n    // )\n  };\n\n  useEffect(() => {\n    isLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedIn,\n      isLoggedIn\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"81emVA+KGXopSnfrhBepOR4HVzY=\");\n\n_c = AuthContextProvider;\n\nconst mapStateToProps = state => {\n  return {\n    currentUserID: state.user\n  };\n};\n\nexport { AuthContextProvider };\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/util/AuthContext.js"],"names":["React","useState","useEffect","createContext","getLoggedIn","connect","AuthContext","AuthContextProvider","props","loggedIn","setLoggedIn","undefined","isLoggedIn","then","res","getCurrentUser","children","mapStateToProps","state","currentUserID","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEA,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACU,SAAD,CAAxC;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC3BR,IAAAA,WAAW,GAAGS,IAAd,CAAoBC,GAAD,IAASJ,WAAW,CAACI,GAAD,CAAvC;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,YAAY,CAC/B;AACA;AACA;AACH,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAA7B;AAAA,cACKJ,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArBQT,mB;;KAAAA,mB;;AAsBT,MAAMU,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,aAAa,EAAED,KAAK,CAACE;AADlB,GAAP;AAGH,CAJD;;AAMA,SAASb,mBAAT;AACA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\"\nimport { getLoggedIn } from \"../api/auth\"\nimport { connect } from \"react-redux\"\n\nconst AuthContext = createContext()\n\nfunction AuthContextProvider(props) {\n    const [loggedIn, setLoggedIn] = useState(undefined)\n\n    const isLoggedIn = async () => {\n        getLoggedIn().then((res) => setLoggedIn(res))\n    }\n\n    const getCurrentUser = async () => {\n        // getCurrentUser(Cookies.get(\"token\")).then((res) =>\n        //     setUserData(res.user_data)\n        // )\n    }\n\n    useEffect(() => {\n        isLoggedIn()\n    }, [])\n    return (\n        <AuthContext.Provider value={{ loggedIn, isLoggedIn }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        currentUserID: state.user,\n    }\n}\n\nexport { AuthContextProvider }\nexport default AuthContext\n"]},"metadata":{},"sourceType":"module"}