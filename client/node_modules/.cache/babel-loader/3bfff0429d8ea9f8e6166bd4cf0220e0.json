{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetList/TweetList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./TweetList.css\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { tweetActions } from \"../../action/tweet\";\nimport AuthContext from \"../../util/AuthContext\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetList(props) {\n  _s();\n\n  const [tweetList, setTweetList] = useState([]);\n  const [likeCounter, setLikeCounter] = useState();\n  const [page, setPage] = useState(1);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const today = moment(); // useEffect(() => {\n  //     const onLoadTweetList = () => {\n  //         setTweetList(props.tweet_payload)\n  //     }\n  //     onLoadTweetList()\n  // }, [props.tweet_payload])\n\n  const handleLikeCounter = tweet_id => {\n    const data = tweetList.filter(list => list._id === tweet_id);\n    setLikeCounter(data[0].likes + 1);\n    const payload = {\n      likes: likeCounter,\n      _id: tweet_id\n    };\n    props.dispatch(tweetActions.likeTweet(payload));\n  };\n\n  const handleRemoveTweet = id => {\n    try {\n      props.dispatch(tweetActions.removeTweet(id));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const fetchMoreData = () => {\n    console.log(props.dispatch(tweetActions.getAllTweet(page)));\n    setTweetList(props.tweet_payload);\n    setPage(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    fetchMoreData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"scrollable\",\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: tweetList.length,\n          next: fetchMoreData,\n          hasMore: true,\n          loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this),\n          scrollableTarget: \"scrollable\",\n          children: tweetList.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-list-container\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"li-element\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"username-icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tweet-body-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tweet-username\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: tweet.username\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"date-actions-wrapper\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tweet-date-created\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: moment.duration(today.diff(moment(tweet.createdAt))).asDays()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 76,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 53\n                      }, this), currentUser._id === tweet.user_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"remove-tweet-btn\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleRemoveTweet(tweet._id),\n                          className: \"remove-btn\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"remove-btn-text\",\n                            children: \"x\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 99,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 91,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 57\n                      }, this) : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tweet-body-text\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: tweet.tweet_body\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"like-comments-counter\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"number-of-likes\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [tweet.likes, \" like(s)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"number-of-comments\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [tweet.comments.length, \" \", \"comments\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                    id: \"line-separator\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tweet-body-footer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tweet-like-btn\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleLikeCounter(tweet._id),\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          id: \"btn-like\",\n                          children: \"Like\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 136,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tweet-comment-btn\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Comment\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tweet-retweet-btn\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Retweet\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetList, \"5u50hhBEcrtibmWQYvbO3UzuTKE=\");\n\n_c = TweetList;\n\nconst mapStateToProps = state => {\n  return {\n    tweet_payload: state.tweets\n  };\n};\n\nexport default connect(mapStateToProps)(TweetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/TweetList/TweetList.js"],"names":["React","useState","useEffect","useContext","connect","moment","tweetActions","AuthContext","InfiniteScroll","TweetList","props","tweetList","setTweetList","likeCounter","setLikeCounter","page","setPage","currentUser","today","handleLikeCounter","tweet_id","data","filter","list","_id","likes","payload","dispatch","likeTweet","handleRemoveTweet","id","removeTweet","error","console","log","message","fetchMoreData","getAllTweet","tweet_payload","prev","length","map","tweet","index","username","duration","diff","createdAt","asDays","user_id","tweet_body","comments","mapStateToProps","state","tweets"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport \"./TweetList.css\"\nimport { connect } from \"react-redux\"\nimport moment from \"moment\"\nimport { tweetActions } from \"../../action/tweet\"\nimport AuthContext from \"../../util/AuthContext\"\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\nfunction TweetList(props) {\n    const [tweetList, setTweetList] = useState([])\n    const [likeCounter, setLikeCounter] = useState()\n    const [page, setPage] = useState(1)\n    const { currentUser } = useContext(AuthContext)\n    const today = moment()\n    // useEffect(() => {\n    //     const onLoadTweetList = () => {\n    //         setTweetList(props.tweet_payload)\n    //     }\n    //     onLoadTweetList()\n    // }, [props.tweet_payload])\n\n    const handleLikeCounter = (tweet_id) => {\n        const data = tweetList.filter((list) => list._id === tweet_id)\n        setLikeCounter(data[0].likes + 1)\n        const payload = {\n            likes: likeCounter,\n            _id: tweet_id,\n        }\n        props.dispatch(tweetActions.likeTweet(payload))\n    }\n\n    const handleRemoveTweet = (id) => {\n        try {\n            props.dispatch(tweetActions.removeTweet(id))\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const fetchMoreData = () => {\n        console.log(props.dispatch(tweetActions.getAllTweet(page)))\n        setTweetList(props.tweet_payload)\n        setPage((prev) => prev + 1)\n    }\n    useEffect(() => {\n        fetchMoreData()\n    }, [])\n    return (\n        <div className=\"container\">\n            <ul>\n                <div id=\"scrollable\">\n                    <InfiniteScroll\n                        dataLength={tweetList.length}\n                        next={fetchMoreData}\n                        hasMore={true}\n                        loader={<h4>Loading...</h4>}\n                        scrollableTarget=\"scrollable\"\n                    >\n                        {tweetList.map((tweet, index) => (\n                            <div className=\"tweet-list-container\">\n                                <li key={index}>\n                                    <div className=\"li-element\">\n                                        <div className=\"username-icon\">\n                                            <span></span>\n                                        </div>\n\n                                        <div className=\"tweet-body\">\n                                            <div className=\"tweet-body-header\">\n                                                <div className=\"tweet-username\">\n                                                    <span>\n                                                        {tweet.username}\n                                                    </span>\n                                                </div>\n                                                <div className=\"date-actions-wrapper\">\n                                                    <div className=\"tweet-date-created\">\n                                                        <span>\n                                                            {moment\n                                                                .duration(\n                                                                    today.diff(\n                                                                        moment(\n                                                                            tweet.createdAt\n                                                                        )\n                                                                    )\n                                                                )\n                                                                .asDays()}\n                                                        </span>\n                                                    </div>\n                                                    {currentUser._id ===\n                                                    tweet.user_id ? (\n                                                        <div className=\"remove-tweet-btn\">\n                                                            <button\n                                                                onClick={() =>\n                                                                    handleRemoveTweet(\n                                                                        tweet._id\n                                                                    )\n                                                                }\n                                                                className=\"remove-btn\"\n                                                            >\n                                                                <span className=\"remove-btn-text\">\n                                                                    x\n                                                                </span>\n                                                            </button>\n                                                        </div>\n                                                    ) : (\n                                                        \"\"\n                                                    )}\n                                                </div>\n                                            </div>\n                                            <div className=\"tweet-body-text\">\n                                                <p>{tweet.tweet_body}</p>\n                                            </div>\n                                            <div className=\"like-comments-counter\">\n                                                <div className=\"number-of-likes\">\n                                                    <span>\n                                                        {tweet.likes} like(s)\n                                                    </span>\n                                                </div>\n                                                <div className=\"number-of-comments\">\n                                                    <span>\n                                                        {tweet.comments.length}{\" \"}\n                                                        comments\n                                                    </span>\n                                                </div>\n                                            </div>\n\n                                            <hr id=\"line-separator\" />\n                                            <div className=\"tweet-body-footer\">\n                                                <div className=\"tweet-like-btn\">\n                                                    <button\n                                                        onClick={() =>\n                                                            handleLikeCounter(\n                                                                tweet._id\n                                                            )\n                                                        }\n                                                    >\n                                                        <span id=\"btn-like\">\n                                                            Like\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"tweet-comment-btn\">\n                                                    <span>Comment</span>\n                                                </div>\n                                                <div className=\"tweet-retweet-btn\">\n                                                    <span>Retweet</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </li>\n                            </div>\n                        ))}\n                    </InfiniteScroll>\n                </div>\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tweet_payload: state.tweets,\n    }\n}\nexport default connect(mapStateToProps)(TweetList)\n"]},"metadata":{},"sourceType":"module"}