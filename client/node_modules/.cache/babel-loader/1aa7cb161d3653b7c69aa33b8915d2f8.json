{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport TweetForm from \"./TweetForm/TweetForm\";\nimport { tweetActions } from \"../action/tweet\";\nimport TweetList from \"./TweetList/TweetList\";\nimport LogoutBtn from \"./LogoutBtn/LogoutBtn\";\nimport AuthContext from \"../util/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tweet(props) {\n  _s();\n\n  // props.dispatch(\n  //     addTweet({\n  //         name: \"Test\",\n  //         comments: 12,\n  //         retweets: 23,\n  //         likses: 23,\n  //     })\n  // )\n  useEffect(() => {\n    props.dispatch(tweetActions.getAllTweet());\n  }, []);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  console.log(currentUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(LogoutBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TweetForm, {\n      onTweetPost: tweetPost => {\n        props.dispatch(tweetActions.addTweet(tweetPost));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), props.tweet_payload.length > 0 ? /*#__PURE__*/_jsxDEV(TweetList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 47\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tweet, \"maMwG4WwzGmkLO+kjcPRW0S1X2s=\");\n\n_c = Tweet;\n\nconst mapStateToProps = state => {\n  return {\n    tweet_payload: state.tweets\n  };\n};\n\nexport default connect(mapStateToProps)(Tweet);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/Tweet.js"],"names":["React","useState","useEffect","useContext","connect","TweetForm","tweetActions","TweetList","LogoutBtn","AuthContext","Tweet","props","dispatch","getAllTweet","currentUser","console","log","tweetPost","addTweet","tweet_payload","length","mapStateToProps","state","tweets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACC,QAAN,CAAeN,YAAY,CAACO,WAAb,EAAf;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAkBX,UAAU,CAACM,WAAD,CAAlC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AACI,MAAA,WAAW,EAAGG,SAAD,IAAe;AACxBN,QAAAA,KAAK,CAACC,QAAN,CAAeN,YAAY,CAACY,QAAb,CAAsBD,SAAtB,CAAf;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQKN,KAAK,CAACQ,aAAN,CAAoBC,MAApB,GAA6B,CAA7B,gBAAiC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAjC,gBAAiD;AAAA;AAAA;AAAA;AAAA,YARtD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA9BQV,K;;KAAAA,K;;AA+BT,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,aAAa,EAAEG,KAAK,CAACC;AADlB,GAAP;AAGH,CAJD;;AAKA,eAAenB,OAAO,CAACiB,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport { connect } from \"react-redux\"\nimport TweetForm from \"./TweetForm/TweetForm\"\nimport { tweetActions } from \"../action/tweet\"\nimport TweetList from \"./TweetList/TweetList\"\nimport LogoutBtn from \"./LogoutBtn/LogoutBtn\"\nimport AuthContext from \"../util/AuthContext\"\n\nfunction Tweet(props) {\n    // props.dispatch(\n    //     addTweet({\n    //         name: \"Test\",\n    //         comments: 12,\n    //         retweets: 23,\n    //         likses: 23,\n    //     })\n    // )\n\n    useEffect(() => {\n        props.dispatch(tweetActions.getAllTweet())\n    }, [])\n\n    const { currentUser } = useContext(AuthContext)\n\n    console.log(currentUser)\n\n    return (\n        <div className=\"container\">\n            <LogoutBtn />\n            <TweetForm\n                onTweetPost={(tweetPost) => {\n                    props.dispatch(tweetActions.addTweet(tweetPost))\n                }}\n            />\n\n            {props.tweet_payload.length > 0 ? <TweetList /> : <div></div>}\n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        tweet_payload: state.tweets,\n    }\n}\nexport default connect(mapStateToProps)(Tweet)\n"]},"metadata":{},"sourceType":"module"}