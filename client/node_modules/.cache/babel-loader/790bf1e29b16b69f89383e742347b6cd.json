{"ast":null,"code":"const tweetReducerDefaultState = [];\nexport default ((state = tweetReducerDefaultState, action) => {\n  switch (action.type) {\n    case \"ADD_TWEET\":\n      return [...state, action.tweet_payload];\n\n    case \"ALL_TWEET\":\n      return [...action.tweets_payload];\n\n    case \"REMOVE_TASK\":\n      return state.filter(({\n        id\n      }) => id !== action.id);\n\n    case \"EDIT_TASK\":\n      return state.map(task_payload => {\n        if (task_payload.id === action.id) {\n          return { ...task_payload,\n            ...action.updates\n          };\n        } else {\n          return task_payload;\n        }\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/reducers/TweetReducer.js"],"names":["tweetReducerDefaultState","state","action","type","tweet_payload","tweets_payload","filter","id","map","task_payload","updates"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG,EAAjC;AAEA,gBAAe,CAACC,KAAK,GAAGD,wBAAT,EAAmCE,MAAnC,KAA8C;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,aAAlB,CAAP;;AACJ,SAAK,WAAL;AACI,aAAO,CAAC,GAAGF,MAAM,CAACG,cAAX,CAAP;;AACJ,SAAK,aAAL;AACI,aAAOJ,KAAK,CAACK,MAAN,CAAa,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKL,MAAM,CAACK,EAAvC,CAAP;;AAEJ,SAAK,WAAL;AACI,aAAON,KAAK,CAACO,GAAN,CAAWC,YAAD,IAAkB;AAC/B,YAAIA,YAAY,CAACF,EAAb,KAAoBL,MAAM,CAACK,EAA/B,EAAmC;AAC/B,iBAAO,EACH,GAAGE,YADA;AAEH,eAAGP,MAAM,CAACQ;AAFP,WAAP;AAIH,SALD,MAKO;AACH,iBAAOD,YAAP;AACH;AACJ,OATM,CAAP;;AAUJ;AACI,aAAOR,KAAP;AApBR;AAsBH,CAvBD","sourcesContent":["const tweetReducerDefaultState = []\n\nexport default (state = tweetReducerDefaultState, action) => {\n    switch (action.type) {\n        case \"ADD_TWEET\":\n            return [...state, action.tweet_payload]\n        case \"ALL_TWEET\":\n            return [...action.tweets_payload]\n        case \"REMOVE_TASK\":\n            return state.filter(({ id }) => id !== action.id)\n\n        case \"EDIT_TASK\":\n            return state.map((task_payload) => {\n                if (task_payload.id === action.id) {\n                    return {\n                        ...task_payload,\n                        ...action.updates,\n                    }\n                } else {\n                    return task_payload\n                }\n            })\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}