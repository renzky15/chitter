{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useHistory, withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../api/auth\";\nimport \"./Login.css\";\nimport AuthContext from \"../../util/AuthContext\";\nimport { getCurrentUserID } from \"../../action/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const {\n    isLoggedIn\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const loginPayload = {\n      email,\n      password\n    };\n    await login(loginPayload).then(res => {\n      console.log(res.userID);\n      props.dispatch(getCurrentUserID(res.userID));\n    }).catch(err => {});\n    await isLoggedIn();\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        margin: 0,\n        marginTop: \"30px\"\n      },\n      children: \"Chitter | Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login_form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        name: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password,\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn_login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"register_link\",\n      children: [\"Not yet register? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"7tCQnPHYxvOitj7lsPS620Q/DFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default connect()(withRouter(Login));\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/client/src/components/Login/Login.js"],"names":["React","useContext","useState","useHistory","withRouter","connect","login","AuthContext","getCurrentUserID","Login","props","isLoggedIn","history","email","setEmail","password","setPassword","handleLogin","e","preventDefault","loginPayload","then","res","console","log","userID","dispatch","catch","err","push","textAlign","margin","marginTop","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,cAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAiBV,UAAU,CAACM,WAAD,CAAjC;AACA,QAAMK,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMe,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,YAAY,GAAG;AACjBP,MAAAA,KADiB;AAEjBE,MAAAA;AAFiB,KAArB;AAKA,UAAMT,KAAK,CAACc,YAAD,CAAL,CACDC,IADC,CACKC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACAf,MAAAA,KAAK,CAACgB,QAAN,CAAelB,gBAAgB,CAACc,GAAG,CAACG,MAAL,CAA/B;AACH,KAJC,EAKDE,KALC,CAKMC,GAAD,IAAS,CAAE,CALhB,CAAN;AAOA,UAAMjB,UAAU,EAAhB;AACAC,IAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACH,GAhBD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,QADR;AAEHC,QAAAA,MAAM,EAAE,CAFL;AAGHC,QAAAA,SAAS,EAAE;AAHR,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAEf,WAAvC;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,QAAQ,EAAGC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACe,MAAF,CAASC,KAAV,CAF7B;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,KAAK,EAAErB;AANX;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,QAAQ,EAAGK,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACe,MAAF,CAASC,KAAV,CAHhC;AAII,QAAA,KAAK,EAAEnB,QAJX;AAKI,QAAA,WAAW,EAAC,UALhB;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cAVJ,eAmBI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAgCI;AAAG,MAAA,EAAE,EAAC,eAAN;AAAA,oDACsB;AAAG,QAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GA7DQN,K;UAEWN,U;;;KAFXM,K;AA+DT,eAAeJ,OAAO,GAAGD,UAAU,CAACK,KAAD,CAAb,CAAtB","sourcesContent":["import React, { useContext, useState } from \"react\"\nimport { useHistory, withRouter } from \"react-router\"\nimport { connect } from \"react-redux\"\nimport { login } from \"../../api/auth\"\n\nimport \"./Login.css\"\nimport AuthContext from \"../../util/AuthContext\"\nimport { getCurrentUserID } from \"../../action/user\"\n\nfunction Login(props) {\n    const { isLoggedIn } = useContext(AuthContext)\n    const history = useHistory()\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const handleLogin = async (e) => {\n        e.preventDefault()\n        const loginPayload = {\n            email,\n            password,\n        }\n\n        await login(loginPayload)\n            .then((res) => {\n                console.log(res.userID)\n                props.dispatch(getCurrentUserID(res.userID))\n            })\n            .catch((err) => {})\n\n        await isLoggedIn()\n        history.push(\"/\")\n    }\n    return (\n        <div className=\"login_container\">\n            <h2\n                style={{\n                    textAlign: \"center\",\n                    margin: 0,\n                    marginTop: \"30px\",\n                }}\n            >\n                Chitter | Login\n            </h2>\n\n            <form className=\"login_form\" onSubmit={handleLogin}>\n                <input\n                    type=\"email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                />\n\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    value={password}\n                    placeholder=\"Password\"\n                    required\n                />\n\n                <button className=\"btn_login\">Login</button>\n            </form>\n            <p id=\"register_link\">\n                Not yet register? <a href=\"/register\">Register here</a>\n            </p>\n        </div>\n    )\n}\n\nexport default connect()(withRouter(Login))\n"]},"metadata":{},"sourceType":"module"}