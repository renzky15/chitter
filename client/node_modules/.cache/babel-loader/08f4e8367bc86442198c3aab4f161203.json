{"ast":null,"code":"var _jsxFileName = \"/home/renz/Desktop/Projects/twitter-challenge-app/src/components/TweetList/TweetList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./TweetList.css\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetList(props) {\n  _s();\n\n  const [tweetList, setTweetList] = useState([]);\n  useEffect(() => {\n    const onLoadTweetList = () => {\n      setTweetList(props.tweet_payload);\n    };\n\n    onLoadTweetList();\n  }, [props.tweet_payload]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tweetList.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-list-container\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"li-element\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweet-body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet-body-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-fullName\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: tweet.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 28,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-username\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"@\", tweet.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tweet-date-created\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: tweet.tweeted_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-body-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tweet.tweetBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetList, \"xruSwIBacbZFezx2WaqQp7cGoFE=\");\n\n_c = TweetList;\n\nconst mapStateToProps = state => {\n  return {\n    tweet_payload: state.tweets\n  };\n};\n\nexport default connect(mapStateToProps)(TweetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"sources":["/home/renz/Desktop/Projects/twitter-challenge-app/src/components/TweetList/TweetList.js"],"names":["React","useState","useEffect","connect","TweetList","props","tweetList","setTweetList","onLoadTweetList","tweet_payload","map","tweet","index","username","tweeted_date","tweetBody","mapStateToProps","state","tweets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,eAAe,GAAG,MAAM;AAC1BD,MAAAA,YAAY,CAACF,KAAK,CAACI,aAAP,CAAZ;AACH,KAFD;;AAGAD,IAAAA,eAAe;AAClB,GALQ,EAKN,CAACH,KAAK,CAACI,aAAP,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAA,gBACKH,SAAS,CAACI,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,yCACI;AAAA,8BAAOD,KAAK,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,yCACI;AAAA,oCAAQF,KAAK,CAACE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBALJ,eASI;AAAK,kBAAA,SAAS,EAAC,oBAAf;AAAA,yCACI;AAAA,8BAAOF,KAAK,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAsBI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACI;AAAA,wBAAIH,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAtBJ;AAAA,WAASH,KAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GA7CQR,S;;KAAAA,S;;AA+CT,MAAMY,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,aAAa,EAAEQ,KAAK,CAACC;AADlB,GAAP;AAGH,CAJD;;AAKA,eAAef,OAAO,CAACa,eAAD,CAAP,CAAyBZ,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport \"./TweetList.css\"\nimport { connect } from \"react-redux\"\n\nfunction TweetList(props) {\n    const [tweetList, setTweetList] = useState([])\n    useEffect(() => {\n        const onLoadTweetList = () => {\n            setTweetList(props.tweet_payload)\n        }\n        onLoadTweetList()\n    }, [props.tweet_payload])\n\n    return (\n        <div className=\"container\">\n            <ul>\n                {tweetList.map((tweet, index) => (\n                    <div className=\"tweet-list-container\">\n                        <li key={index}>\n                            <div className=\"li-element\">\n                                <div className=\"username-icon\">\n                                    <span></span>\n                                </div>\n\n                                <div className=\"tweet-body\">\n                                    <div className=\"tweet-body-header\">\n                                        <div className=\"tweet-fullName\">\n                                            <span>{tweet.username}</span>\n                                        </div>\n\n                                        <div className=\"tweet-username\">\n                                            <span>@{tweet.username}</span>\n                                        </div>\n\n                                        <div className=\"tweet-date-created\">\n                                            <span>{tweet.tweeted_date}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"tweet-body-text\">\n                                <p>{tweet.tweetBody}</p>\n                            </div>\n                        </li>\n                    </div>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tweet_payload: state.tweets,\n    }\n}\nexport default connect(mapStateToProps)(TweetList)\n"]},"metadata":{},"sourceType":"module"}